% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/report_characteristics.R
\name{report_characteristics}
\alias{report_characteristics}
\title{Report summary statistics on a dataframe}
\usage{
report_characteristics(
  d,
  cat.cols = NULL,
  num.cols = NULL,
  group = NULL,
  round.places = 1,
  round.percent = 0,
  percent.symbol = FALSE,
  format = TRUE,
  total.column = TRUE,
  total.row = TRUE,
  group.exclude.levels = NULL,
  col.exclude.levels = NULL,
  return.summaries = c("count_percent", "mean_sd"),
  return.summaries.bycol = NULL
)
}
\arguments{
\item{d}{A dataframe.}

\item{cat.cols}{A vector of column names for which to report frequency distributions.}

\item{num.cols}{A vector of column names for which to report center and spread measures.}

\item{group}{An optional string containing a column name to aggregate statistics by.}

\item{round.places}{An integer count of decimal places to include in summary statistic reporting, or an integer vector of length(num.cols) with the count of decimal places to be reported for each corresponding element in num.cols.}

\item{round.percent}{An integer count of decimal places to include in percentage reporting.}

\item{percent.symbol}{A boolean: if TRUE then the percent symbol is included with percentage reporting.}

\item{format}{A boolean: if TRUE (default) then summary statistics are formatted, see Details.}

\item{total.column}{A boolean: if TRUE when group argument is provided, then statistics are reported for the total dataset in addition to the levels of group.}

\item{total.row}{A boolean: if TRUE, then count of records in each column is reported.}

\item{group.exclude.levels}{A vector with optional levels of group to exclude from report.}

\item{col.exclude.levels}{A vector with optional levels of variables in cols to exclude from report.}

\item{return.summaries}{A vector with names of formatted summary statistics to be returned, default is c("count_percent", "mean_sd"). See Details.}

\item{return.summaries.bycol}{A list of length(return.summaries) containing a boolean vectors of length(num.cols). If TRUE, the return.summaries element that corresponds to the position in the return.summaries list will be returned for the column that corresponds to the position in cols. See Examples.}
}
\value{
If format is set to TRUE, a dataframe is returned with the summary statistics for all categorical and numeric columns. If format is set to FALSE, a list of the raw
summary outputs will be returned for categorical and numeric columns separately.
}
\description{
Summary statistics are computed on a dataframe according to data type:
frequency distributions are reported for factor or categorical variables and measures of center and spread are reported for numeric variables.
Additional arguments provide options to stratify analysis by subgroup and tune reported statistics for each input.
}
\details{
return.summaries

Defined values include c("count_percent", "mean_sd","median_iqr", "median_minmax"), and are returned only when format = TRUE. "count_percent" returns a frequency distribution formatted as "count (percent%)". Use percent.symbol to control inclusion of % in reporting.
"mean_sd" returns mean and standard deviation formatted as "mean, sd". "median_iqr" returns the median with the 25th and 75th percentile as "median (25th percentile, 75th percentile)"
"median_minmax" returns the median with the minimum and maximum formatted as "median (minimum-maximum)."

format

When format is set to FALSE, a list of raw summary outputs will be returned for cat.cols and num.cols separately.
For cat.cols, the unformatted summary includes the frequency (count), ratio (count/total), and percent.
For num.cols, the unformatted summary includes the mean, standard deviation, minimum, maximum, median, 25th percentile, 75th percentile, count with observation, percent with observations out of total observations, count missing observations, percent missing observations out of total observations.
}
\examples{
\dontrun{
# generate some random data for a made-up patient cohort
size = 2500
patient_id = sample(1:1000000,size)
sample_data = as.data.frame(patient_id) \%>\%
dplyr::mutate(outcome_flag = rbinom(size, 1, prob = c(0.1)),
                binary_var = factor(rbinom(size,1,prob=c(0.7))),
                numeric_var1=round(rchisq(size,5)),
                numeric_var2=runif(size),
                cat_var=factor(rbinom(size,3,prob=c(0.5)))) \%>\%
  dplyr::mutate(numeric_var1 = ifelse(outcome_flag==0, numeric_var1*numeric_var2,numeric_var1),
                cat_var = dplyr::case_when(cat_var==0~"A",
                                           cat_var==1~"B",
                                           cat_var==2~"C",
                                           TRUE ~ "D"))

# summarize sample_data
report_characteristics(sample_data)

 # access complete summary with format=FALSE
report_characteristics(some_data,
                        format = FALSE)

 # group by cat_var1 and report mean_sd for norm_var and median_iqr for exp_var
report_characteristics(some_data,
                        cols = c("exp_var", "norm_var", "binary_var1"),
                        round.places = c(1),
                        format = TRUE,
                        group = "cat_var1",
                        return.summaries.bycol = list(c(TRUE,TRUE),
                                                      c(FALSE,TRUE),
                                                      c(TRUE, FALSE),
                                                      c(FALSE,FALSE)))
}

}
