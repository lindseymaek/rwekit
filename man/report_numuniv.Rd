% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/report_numuniv.R
\name{report_numuniv}
\alias{report_numuniv}
\title{Report formatted summary statistics}
\usage{
report_numuniv(
  d,
  cols,
  group = NULL,
  round.places = 1,
  round.percent = 1,
  format = TRUE,
  return.summaries,
  return.summaries.bycol = NULL
)
}
\arguments{
\item{cols}{a vector of column names for which to report summary statistics}

\item{group}{optional column name to stratify by}

\item{round.places}{a single integer count of decimal places to include in summary statistic reporting, or an integer vector of length(cols) with the count of decimal places to be reported for each corresponding col}

\item{round.percent}{integer count of decimal places to include in percentage reporting}

\item{format}{if TRUE (default) then a formatted character column is generated for each return.measure. See details.}

\item{return.summaries}{a vector of formatted summary statistics: "count_percent", "mean_sd", "median_iqr", "median_minmax". All included by default.}

\item{return.summaries.bycol}{a list of length(return.summaries) containing a boolean vectors of length(col). If TRUE, the corresponding return.summaries value will be returned for the specified column.}

\item{x}{A vector containing a numeric variable}
}
\value{
A dataframe with all summary statistics as variables
}
\description{
An expanded summary function for univariate analyses of one or more numeric columns includes
mean, standard deviation, median, 1st and 3rd quartiles, minimum, maximum, count/percent of missing and non-missing observations
}
\details{
Additional details...NA values are removed from all summary statistic calculations.
quantiles() uses argument type=2
}
\examples{
\dontrun{
# some mock patient data
size = 2500
unif1 = runif(size)
unif2 = runif(size)
patient_id = sample(1:1000000,size)
mock_data = as.data.frame(patient_id) \%>\%
 dplyr::mutate(cat_var1 = dplyr::case_when(unif2<0.4 ~ "A",
                                           unif2>=0.4 & unif2<0.6 ~ "B",
                                           unif2>=0.6& unif2<0.8 ~ "C",
                                           unif2>=0.8 ~ "D"),
              chisq_var = round(rchisq(size,5)),
              norm_var = abs(round(10*rnorm(size, mean = 5.5, sd = 1.1),1)),
              exp_var = round(rexp(size)),
              binary_var1 = ifelse(unif1<0.8,1,0),
              binary_var2 = ifelse(unif1<0.4,1,0),
              rare_event =ifelse(unif2>0.95,1,0))

# summarize exp_var and norm_var for all patients
report_numuniv(mock_data,
               cols = c("exp_var", "norm_var"),
               round.places = c(1),
               format = TRUE)

 # access complete summary with format=FALSE
report_numuniv(mock_data,
               cols = c("exp_var", "norm_var"),
               round.places = c(1),
               format = FALSE)

 # group by cat_var1 and report mean_sd for norm_var and median_iqr for exp_var
report_numuniv(mock_data,
               cols = c("exp_var", "norm_var"),
               round.places = c(1),
               format = TRUE,
               group = "cat_var1",
               return.summaries.bycol = list(c(TRUE,TRUE),
                                             c(FALSE,TRUE),
                                             c(TRUE, FALSE),
                                             c(FALSE,FALSE)))
}

}
